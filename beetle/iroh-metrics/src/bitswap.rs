use std::fmt;

use prometheus_client::{
    metrics::{counter::Counter, gauge::Gauge},
    registry::Registry,
};
use tracing::error;

use crate::{
    core::{HistogramType, MRecorder, MetricType, MetricsRecorder},
    Collector,
};

make_metrics! {
    Bitswap,
    RequestsTotal: Counter: "Total number of requests received by bitswap",
    CanceledTotal: Counter: "Total number of requests canceled by bitswap",
    SentBlockBytes: Counter: "Number of bytes streamed",
    ReceivedBlockBytes: Counter: "Number of bytes received",
    MessageBytesOut: Counter: "",
    MessageBytesIn: Counter: "",
    BlocksIn: Counter: "",
    BlocksOut: Counter: "",
    ProvidersTotal: Counter: "Number of providers",
    AttemptedDials: Counter: "",
    Dials: Counter: "",
    KnownPeers: Counter: "",
    ForgottenPeers: Counter: "",
    WantedBlocks: Counter: "",
    WantedBlocksReceived: Counter: "",
    WantHaveBlocks: Counter: "",
    CancelBlocks: Counter: "",
    CancelWantBlocks: Counter: "",
    ConnectedPeers: Counter: "",
    ResponsivePeers: Counter: "",
    UnresponsivePeers: Counter: "",
    DisconnectedPeers: Counter: "",
    MessagesAttempted: Counter: "",
    MessagesSent: Counter: "",
    MessagesProcessingClient: Counter: "",
    MessagesProcessingServer: Counter: "",
    MessagesReceived: Counter: "",
    EventsBackpressureIn: Counter: "",
    EventsBackpressureOut: Counter: "",
    PollActionConnectedWants: Counter: "",
    PollActionConnected: Counter: "",
    PollActionNotConnected: Counter: "",
    ProtocolUnsupported: Counter: "",
    HandlerPollCount: Counter: "",
    HandlerPollEventCount: Counter: "",
    HandlerConnUpgradeErrors: Counter: "",
    InboundSubstreamsCreatedLimit: Counter: "",
    OutboundSubstreamsEvent: Counter: "",
    OutboundSubstreamsCreatedLimit: Counter: "",
    HandlerInboundLoopCount: Counter: "",
    HandlerOutboundLoopCount: Counter: "",
    SessionsCreated: Counter: "Number of sessions created",
    SessionsDestroyed: Counter: "Number of sessions destroyed",
    ProviderQueryCreated: Counter: "",
    ProviderQuerySuccess: Counter: "",
    ProviderQueryError: Counter: "",
    EngineActiveTasks: Gauge: "",
    EnginePendingTasks: Gauge: "",

    ClientLoopTick: Counter: "",
    ServerTaskLoopTick: Counter: "",
    ServerProviderTaskLoopTick: Counter: "",
    ServerKeyProviderTaskLoopTick: Counter: "",
    MessageQueueWorkerLoopTick: Counter: "",
    SessionLoopTick: Counter: "",
    SessionGetBlockLoopTick: Counter: "",
    FindMorePeersLoopTick: Counter: "",
    DontHaveTimeoutLoopTick: Counter: "",
    SessionWantSenderLoopTick: Counter: "",
    EngineLoopTick: Counter: "",
    ScoreLedgerLoopTick: Counter: "",
    PeerManagerLoopTick: Counter: "",

    MessageQueuesCreated: Counter: "",
    MessageQueuesDestroyed: Counter: "",
    MessageQueuesStopped: Counter: "",

    ToSwarmPollTick: Counter: "",
    NetworkPollTick: Counter: ""
}
