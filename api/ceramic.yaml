openapi: 3.0.0
info:
  description: >
    This is the Ceramic API for working with streams and events
  version: 0.1.1
  title: Ceramic API
    #license:
    #  name: Apache 2.0
    #  url: http://www.apache.org/licenses/LICENSE-2.0.html
  license:
    name: MIT
    url: https://mit-license.org/

servers:
  - url: /ceramic

paths:
  /liveness:
    get:
      summary: Test the liveness of the Ceramic node
      responses:
        "200":
          description: success
  /version:
    post:
      summary: Get the version of the Ceramic node
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: success
  '/subscribe/{sort_key}/{sort_value}':
    get:
      summary: Get events for a stream
      parameters:
        - name: sort_key
          in: path
          description: name of the sort_key
          schema:
            type: string
          required: true
        - name: sort_value
          in: path
          description: value associated with the sort key
          schema:
            type: string
          required: true
        - name: controller
          in: query
          description: the controller to subscribe to.
          required: false
          schema:
            type: string
        - name: streamId
          in: query
          description: the stream to subscribe to.
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: the number of events to skip in the given range, default is 0.
          required: false
          schema:
            type: number
        - name: limit
          in: query
          description: the maximum number of events to return, default is no limit.
          required: false
          schema:
            type: number
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
  /events:
    post:
      summary: Creates a new event
      requestBody:
        $ref: '#/components/requestBodies/Event'
      responses:
        '204':
          description: success

components:
  requestBodies:
    Event:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Event'
      description: Event to add to the node
      required: true
  schemas:
    Version:
      description: Version of the Ceramic node in semver format, e.g. 2.1.0
      properties:
        version:
          type: string
          description: Version of the Ceramic node
    Event:
      title: A Ceramic Event
      description: A Ceramic event as part of a Ceramic Stream
      type: object
      required:
        - eventId
      properties:
        eventId:
          type: string
          description: Multibase encodeding of event id bytes.
