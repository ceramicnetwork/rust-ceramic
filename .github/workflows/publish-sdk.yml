name: Publish SDK
on:
  pull_request: {}
  push:
    branches: ["main"]

env:
  CI: true
  DEBUG: napi:*
  APP_NAME: flight-sql-client
  MACOSX_DEPLOYMENT_TARGET: '10.13'
  CARGO_INCREMENTAL: '1'
  FLIGHT_SQL_PATH: ./sdk/packages/flight-sql-client/

permissions:
  contents: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-13
            target: x86_64-apple-darwin
            build: pnpm build:rust --target x86_64-apple-darwin && pnpm build:js
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build: pnpm build:rust --target x86_64-unknown-linux-gnu && pnpm build:js
          - host: macos-latest
            target: aarch64-apple-darwin
            build: pnpm build:rust --target aarch64-apple-darwin && pnpm build:js
    name: stable - ${{ matrix.settings.target }} - node@20
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install pnpm
        id: pnpm-install
        uses: pnpm/action-setup@v3
        with:
          version: 9.8.0
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        working-directory: sdk
        run: |
            echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}_${{ matrix.settings.target }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}_${{ matrix.settings.target }}-pnpm-store-
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}
      - name: Install dependencies and buld
        working-directory: sdk
        run: pnpm install --frozen-lockfile
      - name: Build
        working-directory: sdk
        run: ${{ matrix.settings.build }}
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: ${{ env.FLIGHT_SQL_PATH }}${{ env.APP_NAME }}.*.node
          if-no-files-found: error
  publish:
    name: Publish @ceramic-sdk packages
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install pnpm
        id: pnpm-install
        uses: pnpm/action-setup@v3
        with:
          version: 9.8.0
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        working-directory: sdk
        run: |
            echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}_publish-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}_publish-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install dependencies
        working-directory: ${{ env.FLIGHT_SQL_PATH }}
        run: pnpm install --frozen-lockfile
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ env.FLIGHT_SQL_PATH }}/artifacts
      - name: Move artifacts
        working-directory: ${{ env.FLIGHT_SQL_PATH }}
        run: pnpm artifacts
      - name: List packages
        working-directory: ${{ env.FLIGHT_SQL_PATH }}
        run: ls -R ./npm
        shell: bash
      - name: Publish
        working-directory: sdk
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          if [[ $(echo "$COMMIT_MESSAGE" | grep 'chore(sdk): version v') ]]; then
            npm config set provenance true
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            for p in $(pwd)/packages/*
            do
              cd $p
              npm publish --access public
            done
          else
            echo 'Not an sdk release commit, skipping...'
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
