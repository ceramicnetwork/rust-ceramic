/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ConnectedImport } from './routes/_connected'
import { Route as ConnectedEventsImport } from './routes/_connected.events'
import { Route as ConnectedEventsIdImport } from './routes/_connected.events.$id'
import { Route as ConnectedEventsIndexImport } from './routes/_connected.events.index'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const ConnectedRoute = ConnectedImport.update({
  id: '/_connected',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ConnectedEventsRoute = ConnectedEventsImport.update({
  path: '/events',
  getParentRoute: () => ConnectedRoute,
} as any)

const ConnectedEventsIndexRoute = ConnectedEventsIndexImport.update({
  path: '/',
  getParentRoute: () => ConnectedEventsRoute,
} as any)

const ConnectedEventsIdRoute = ConnectedEventsIdImport.update({
  path: '/$id',
  getParentRoute: () => ConnectedEventsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_connected': {
      id: '/_connected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ConnectedImport
      parentRoute: typeof rootRoute
    }
    '/_connected/events': {
      id: '/_connected/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof ConnectedEventsImport
      parentRoute: typeof ConnectedImport
    }
    '/_connected/events/$id': {
      id: '/_connected/events/$id'
      path: '/$id'
      fullPath: '/events/$id'
      preLoaderRoute: typeof ConnectedEventsIdImport
      parentRoute: typeof ConnectedEventsImport
    }
    '/_connected/events/': {
      id: '/_connected/events/'
      path: '/'
      fullPath: '/events/'
      preLoaderRoute: typeof ConnectedEventsIndexImport
      parentRoute: typeof ConnectedEventsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  ConnectedRoute: ConnectedRoute.addChildren({
    ConnectedEventsRoute: ConnectedEventsRoute.addChildren({
      ConnectedEventsIdRoute,
      ConnectedEventsIndexRoute,
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_connected"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_connected": {
      "filePath": "_connected.tsx",
      "children": [
        "/_connected/events"
      ]
    },
    "/_connected/events": {
      "filePath": "_connected.events.tsx",
      "parent": "/_connected",
      "children": [
        "/_connected/events/$id",
        "/_connected/events/"
      ]
    },
    "/_connected/events/$id": {
      "filePath": "_connected.events.$id.tsx",
      "parent": "/_connected/events"
    },
    "/_connected/events/": {
      "filePath": "_connected.events.index.tsx",
      "parent": "/_connected/events"
    }
  }
}
ROUTE_MANIFEST_END */
